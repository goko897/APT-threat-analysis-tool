{"version":3,"sources":["components/FileUpload.js","components/ResultDisplay.js","components/NavBar.js","App.js","index.js"],"names":["FileUpload","_ref","onSubmit","file","setFile","useState","_jsxs","async","event","preventDefault","alert","children","_jsx","htmlFor","id","type","accept","onChange","target","files","ResultDisplay","data","JSON","stringify","Navbar","timeSpent","className","href","App","result","setResult","setTimeSpent","useEffect","interval","setInterval","prevTime","clearInterval","timeInSeconds","seconds","Math","floor","formatTime","formData","FormData","append","response","fetch","method","body","ok","blob","url","window","URL","createObjectURL","link","document","createElement","download","click","revokeObjectURL","console","error","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"kPAgCeA,MA9BIC,IAAmB,IAAlB,SAAEC,GAAUD,EAC9B,MAAOE,EAAMC,GAAWC,mBAAS,MAejC,OACEC,eAAA,QAAMJ,SAVaK,UACnBC,EAAMC,iBACFN,QACID,EAASC,GAEfO,MAAM,8BACR,EAI6BC,SAAA,CAC3BC,cAAA,SAAOC,QAAQ,cAAaF,SAAC,kCAC7BC,cAAA,SACEE,GAAG,cACHC,KAAK,OACLC,OAAO,6BACPC,SApBoBT,IACxBJ,EAAQI,EAAMU,OAAOC,MAAM,GAAG,IAqB5BP,cAAA,UAAQG,KAAK,SAAQJ,SAAC,cACjB,ECjBIS,MATOnB,IAAe,IAAd,KAAEoB,GAAMpB,EAC7B,OACEK,eAAA,OAAAK,SAAA,CACEC,cAAA,MAAAD,SAAI,wBACJC,cAAA,OAAAD,SAAMW,KAAKC,UAAUF,EAAM,KAAM,OAC7B,E,MCWKG,MAfAvB,IAAoB,IAAnB,UAAEwB,GAAWxB,EAC3B,OACEK,eAAA,OAAKoB,UAAU,SAAQf,SAAA,CACrBL,eAAA,MAAIoB,UAAU,YAAWf,SAAA,CACvBC,cAAA,MAAAD,SAAIC,cAAA,KAAGe,KAAK,QAAOhB,SAAC,WACpBC,cAAA,MAAAD,SAAIC,cAAA,KAAGe,KAAK,UAAShB,SAAC,kBACtBC,cAAA,MAAAD,SAAIC,cAAA,KAAGe,KAAK,SAAQhB,SAAC,eAEvBL,eAAA,OAAKoB,UAAU,aAAYf,SAAA,CAAC,eACbc,OAEX,E,MCgDKG,MAxDHA,KACV,MAAOC,EAAQC,GAAazB,mBAAS,OAC9BoB,EAAWM,GAAgB1B,mBAAS,GAG3C2B,qBAAU,KACR,MAAMC,EAAWC,aAAY,KAC3BH,GAAcI,GAAaA,EAAW,GAAE,GACvC,KAEH,MAAO,IAAMC,cAAcH,EAAS,GACnC,IAiCH,OACE3B,eAAA,OAAAK,SAAA,CACEC,cAACY,EAAM,CAACC,UARQY,KAClB,MACMC,EAAUD,EAAgB,GAChC,MAAO,GAFSE,KAAKC,MAAMH,EAAgB,OAEtBC,EAAU,GAAK,IAAM,KAAKA,WAAiB,EAK3CG,CAAWhB,KAC9BnB,eAAA,OAAKoB,UAAU,MAAKf,SAAA,CAClBC,cAAA,MAAAD,SAAI,sBACJC,cAACZ,EAAU,CAACE,SApCOK,UACvB,MAAMmC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQzC,GAGxB,MAAM0C,QAAiBC,MAAM,+BAAgC,CAC3DC,OAAQ,OACRC,KAAMN,IAGR,GAAIG,EAASI,GAAI,CACf,MAAMC,QAAaL,EAASK,OACtBC,EAAMC,OAAOC,IAAIC,gBAAgBJ,GACjCK,EAAOC,SAASC,cAAc,KACpCF,EAAK5B,KAAOwB,EACZI,EAAKG,SAAW,aAChBH,EAAKI,QACLP,OAAOC,IAAIO,gBAAgBT,EAC7B,MACEU,QAAQC,MAAM,wBACdhC,EAAU,CAAEgC,MAAO,wBACrB,IAgBKjC,GAAUjB,cAACQ,EAAa,CAACC,KAAMQ,SAE9B,ECrDVkC,IAASC,OACPpD,cAACqD,IAAMC,WAAU,CAAAvD,SACfC,cAACgB,EAAG,MAEN4B,SAASW,eAAe,Q","file":"static/js/main.202b1705.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst FileUpload = ({ onSubmit }) => {\r\n  const [file, setFile] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (file) {\r\n      await onSubmit(file);\r\n    } else {\r\n      alert('Please select a file first.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"file-upload\">Upload Network Analysis File:</label>\r\n      <input\r\n        id=\"file-upload\"\r\n        type=\"file\"\r\n        accept=\".txt,.csv,.json,.gml,.gexf\"\r\n        onChange={handleFileChange}\r\n      />\r\n      <button type=\"submit\">Analyze</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n","import React from 'react';\r\n\r\nconst ResultDisplay = ({ data }) => {\r\n  return (\r\n    <div>\r\n      <h2>APT Analysis Result</h2>\r\n      <pre>{JSON.stringify(data, null, 2)}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultDisplay;\r\n\r\n","import React from 'react';\r\nimport './NavBar.css'; // Separate CSS file for the navigation bar styling\r\n\r\nconst Navbar = ({ timeSpent }) => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <ul className=\"nav-links\">\r\n        <li><a href=\"#home\">Home</a></li>\r\n        <li><a href=\"#upload\">Upload File</a></li>\r\n        <li><a href=\"#about\">About</a></li>\r\n      </ul>\r\n      <div className=\"time-spent\">\r\n        Time spent: {timeSpent}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from 'react';\nimport FileUpload from './components/FileUpload';\nimport ResultDisplay from './components/ResultDisplay';\nimport Navbar from './components/NavBar';\nimport './App.css';\n\nconst App = () => {\n  const [result, setResult] = useState(null);\n  const [timeSpent, setTimeSpent] = useState(0); // Track time spent in seconds\n\n  // Start a timer when the user loads the page\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTimeSpent((prevTime) => prevTime + 1);\n    }, 1000);\n\n    return () => clearInterval(interval); // Cleanup timer on unmount\n  }, []);\n\n  const handleFileSubmit = async (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    // Call backend API to process the file and get results\n    const response = await fetch('http://localhost:3000/upload', {\n      method: 'POST',\n      body: formData,\n    });\n\n    if (response.ok) {\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'result.csv';\n      link.click();\n      window.URL.revokeObjectURL(url);\n    } else {\n      console.error('Error analyzing file');\n      setResult({ error: 'Error analyzing file' });\n    }\n  };\n\n  // Format the time into minutes and seconds\n  const formatTime = (timeInSeconds) => {\n    const minutes = Math.floor(timeInSeconds / 60);\n    const seconds = timeInSeconds % 60;\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds} minutes`;\n  };\n\n  return (\n    <div>\n      <Navbar timeSpent={formatTime(timeSpent)} />\n      <div className=\"App\">\n        <h1>APT Analysis Tool</h1>\n        <FileUpload onSubmit={handleFileSubmit} />\n        {result && <ResultDisplay data={result} />}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}